openapi: 3.0.3
info:
  title: MIT OL Unified Ecommerce API
  version: 0.0.1 (v0)
  description: MIT public API
paths:
  /api/v0/meta/integrated_system/:
    get:
      operationId: meta_integrated_system_list
      description: Viewset for IntegratedSystem model.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIntegratedSystemList'
          description: ''
    post:
      operationId: meta_integrated_system_create
      description: Viewset for IntegratedSystem model.
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
  /api/v0/meta/integrated_system/{id}/:
    get:
      operationId: meta_integrated_system_retrieve
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
    put:
      operationId: meta_integrated_system_update
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
    patch:
      operationId: meta_integrated_system_partial_update
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIntegratedSystemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIntegratedSystemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIntegratedSystemRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
    delete:
      operationId: meta_integrated_system_destroy
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      responses:
        '204':
          description: No response body
  /api/v0/meta/product/:
    get:
      operationId: meta_product_list
      description: Viewset for Product model.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: system__slug
        schema:
          type: string
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: meta_product_create
      description: Viewset for Product model.
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v0/meta/product/{id}/:
    get:
      operationId: meta_product_retrieve
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: meta_product_update
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: meta_product_partial_update
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: meta_product_destroy
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      responses:
        '204':
          description: No response body
  /api/v0/payments/baskets/:
    get:
      operationId: payments_baskets_list
      description: API view set for Basket
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasketList'
          description: ''
  /api/v0/payments/baskets/{basket}/items/:
    get:
      operationId: payments_baskets_items_list
      description: API view set for BasketItem
      parameters:
      - in: path
        name: basket
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasketItemList'
          description: ''
    post:
      operationId: payments_baskets_items_create
      description: |-
        Create a new basket item.

        Args:
            request (HttpRequest): HTTP request

        Returns:
            Response: HTTP response
      parameters:
      - in: path
        name: basket
        schema:
          type: string
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketItem'
          description: ''
  /api/v0/payments/baskets/{basket}/items/{id}/:
    delete:
      operationId: payments_baskets_items_destroy
      description: API view set for BasketItem
      parameters:
      - in: path
        name: basket
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '204':
          description: No response body
  /api/v0/payments/baskets/{username}/:
    get:
      operationId: payments_baskets_retrieve
      description: API view set for Basket
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
          description: ''
  /api/v0/payments/baskets/clear/:
    delete:
      operationId: payments_baskets_clear_destroy
      description: |-
        Clear the basket for the current user.

        Returns:
            Response: HTTP response
      tags:
      - payments
      responses:
        '204':
          description: No response body
  /api/v0/payments/baskets/create_from_product/{system_slug}/{sku}/:
    post:
      operationId: payments_baskets_create_from_product_create
      description: |-
        Create a new basket item from a product for the currently logged in user. Reuse
        the existing basket object if it exists.

        If the checkout flag is set in the POST data, then this will create the
        basket, then immediately flip the user to the checkout interstitial (which
        then redirects to the payment gateway).

        Args:
            system_slug (str): system slug
            sku (str): product slug

        POST Args:
            quantity (int): quantity of the product to add to the basket (defaults to 1)
            checkout (bool): redirect to checkout interstitial (defaults to False)

        Returns:
            Response: HTTP response
      parameters:
      - in: path
        name: sku
        schema:
          type: string
        required: true
      - in: path
        name: system_slug
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '200':
          description: No response body
  /api/v0/payments/checkout/callback/:
    post:
      operationId: payments_checkout_callback_create
      description: |-
        Handle webhook call from the payment gateway when the user has
        completed a transaction.

        Returns:
            - HTTP_200_OK if the Order is found.

        Raises:
            - Http404 if the Order is not found.
      tags:
      - payments
      responses:
        '200':
          description: No response body
  /api/v0/payments/checkout/start_checkout/:
    post:
      operationId: payments_checkout_start_checkout_create
      description: |-
        Start the checkout process. This assembles the basket items
        into an Order with Lines for each item, applies the attached basket
        discounts, and then calls the payment gateway to prepare for payment.

        This is expected to be called from within the Ecommerce cart app, not
        from an integrated system.

        Returns:
            - JSON payload from the ol-django payment gateway app. The payment
              gateway returns data necessary to construct a form that will
              ultimately POST to the actual payment processor.
      tags:
      - payments
      responses:
        '200':
          description: No response body
  /api/v0/payments/orders/history/:
    get:
      operationId: payments_orders_history_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderHistoryList'
          description: ''
  /api/v0/payments/orders/history/{id}/:
    get:
      operationId: payments_orders_history_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderHistory'
          description: ''
components:
  schemas:
    Basket:
      type: object
      description: Basket model serializer
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        basket_items:
          type: string
          readOnly: true
      required:
      - basket_items
      - id
      - user
    BasketItem:
      type: object
      description: BasketItem model serializer
      properties:
        basket:
          type: integer
        product:
          type: integer
        id:
          type: integer
          readOnly: true
      required:
      - basket
      - id
      - product
    BasketItemRequest:
      type: object
      description: BasketItem model serializer
      properties:
        basket:
          type: integer
        product:
          type: integer
      required:
      - basket
      - product
    IntegratedSystem:
      type: object
      description: Serializer for IntegratedSystem model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 80
        description:
          type: string
      required:
      - id
      - name
    IntegratedSystemRequest:
      type: object
      description: Serializer for IntegratedSystem model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 80
        description:
          type: string
      required:
      - name
    Line:
      type: object
      description: Serializes a line item for an order.
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        item_description:
          type: string
          readOnly: true
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        product:
          $ref: '#/components/schemas/Product'
      required:
      - id
      - item_description
      - product
      - quantity
      - total_price
      - unit_price
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - id
      - password
      - username
    OrderHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        reference_number:
          type: string
          maxLength: 255
        purchaser:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        total_price_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_on
      - id
      - lines
      - purchaser
      - total_price_paid
      - updated_on
    PaginatedBasketItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasketItem'
    PaginatedBasketList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Basket'
    PaginatedIntegratedSystemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/IntegratedSystem'
    PaginatedOrderHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderHistory'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PatchedIntegratedSystemRequest:
      type: object
      description: Serializer for IntegratedSystem model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 80
        description:
          type: string
    PatchedProductRequest:
      type: object
      description: Serializer for Product model.
      properties:
        sku:
          type: string
          minLength: 1
          description: SKU of the product.
          maxLength: 255
        name:
          type: string
          minLength: 1
          description: Short name of the product, displayed in carts/etc.
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          description: Price (decimal to two places)
        description:
          type: string
          minLength: 1
          description: Long description of the product.
        system_data:
          nullable: true
          description: System-specific data for the product (in JSON).
        system:
          type: integer
          description: Owner system of the product.
    Product:
      type: object
      description: Serializer for Product model.
      properties:
        id:
          type: integer
          readOnly: true
        deleted_on:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        deleted_by_cascade:
          type: boolean
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        sku:
          type: string
          description: SKU of the product.
          maxLength: 255
        name:
          type: string
          description: Short name of the product, displayed in carts/etc.
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          description: Price (decimal to two places)
        description:
          type: string
          description: Long description of the product.
        system_data:
          nullable: true
          description: System-specific data for the product (in JSON).
        system:
          type: integer
          description: Owner system of the product.
      required:
      - created_on
      - deleted_by_cascade
      - deleted_on
      - description
      - id
      - name
      - price
      - sku
      - system
      - updated_on
    ProductRequest:
      type: object
      description: Serializer for Product model.
      properties:
        sku:
          type: string
          minLength: 1
          description: SKU of the product.
          maxLength: 255
        name:
          type: string
          minLength: 1
          description: Short name of the product, displayed in carts/etc.
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          description: Price (decimal to two places)
        description:
          type: string
          minLength: 1
          description: Long description of the product.
        system_data:
          nullable: true
          description: System-specific data for the product (in JSON).
        system:
          type: integer
          description: Owner system of the product.
      required:
      - description
      - name
      - price
      - sku
      - system
    StateEnum:
      enum:
      - pending
      - fulfilled
      - canceled
      - refunded
      - declined
      - errored
      - review
      type: string
      description: |-
        * `pending` - Pending
        * `fulfilled` - Fulfilled
        * `canceled` - Canceled
        * `refunded` - Refunded
        * `declined` - Declined
        * `errored` - Errored
        * `review` - Review
      x-enum-descriptions:
      - Pending
      - Fulfilled
      - Canceled
      - Refunded
      - Declined
      - Errored
      - Review
