openapi: 3.0.3
info:
  title: MIT OL Unified Ecommerce API
  version: 0.0.1 (v0)
  description: MIT public API
paths:
  /api/v0/meta/integrated_system/:
    get:
      operationId: meta_integrated_system_list
      description: Viewset for IntegratedSystem model.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIntegratedSystemList'
          description: ''
    post:
      operationId: meta_integrated_system_create
      description: Viewset for IntegratedSystem model.
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
  /api/v0/meta/integrated_system/{id}/:
    get:
      operationId: meta_integrated_system_retrieve
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
    put:
      operationId: meta_integrated_system_update
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
    patch:
      operationId: meta_integrated_system_partial_update
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIntegratedSystemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIntegratedSystemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIntegratedSystemRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
    delete:
      operationId: meta_integrated_system_destroy
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      responses:
        '204':
          description: No response body
  /api/v0/meta/product/:
    get:
      operationId: meta_product_list
      description: Viewset for Product model.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: system__slug
        schema:
          type: string
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: meta_product_create
      description: Viewset for Product model.
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v0/meta/product/{id}/:
    get:
      operationId: meta_product_retrieve
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: meta_product_update
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: meta_product_partial_update
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: meta_product_destroy
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      responses:
        '204':
          description: No response body
  /api/v0/payments/baskets/:
    get:
      operationId: payments_baskets_list
      description: Retrives the current user's baskets, one per system.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasketWithProductList'
          description: ''
  /api/v0/payments/baskets/{id}/:
    get:
      operationId: payments_baskets_retrieve
      description: Retrieve a basket for the current user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketWithProduct'
          description: ''
  /api/v0/payments/baskets/add_discount/{system_slug}/:
    post:
      operationId: payments_baskets_add_discount_create
      description: Creates or updates a basket for the current user, adding the discount
        if valid.
      parameters:
      - in: path
        name: system_slug
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketWithProduct'
          description: ''
  /api/v0/payments/baskets/clear/{system_slug}/:
    delete:
      operationId: payments_baskets_clear_destroy
      description: Clears the basket for the current user.
      parameters:
      - in: path
        name: system_slug
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '204':
          description: No response body
  /api/v0/payments/baskets/create_from_product/{system_slug}/{sku}/:
    post:
      operationId: payments_baskets_create_from_product_create
      description: Creates or updates a basket for the current user, adding the selected
        product.
      parameters:
      - in: path
        name: sku
        schema:
          type: string
        required: true
      - in: path
        name: system_slug
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketWithProduct'
          description: ''
  /api/v0/payments/orders/history/:
    get:
      operationId: payments_orders_history_list
      description: Retrives the current user's completed orders.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderHistoryList'
          description: ''
  /api/v0/payments/orders/history/{id}/:
    get:
      operationId: payments_orders_history_retrieve
      description: Retrieve a completed order for the current user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderHistory'
          description: ''
  /api/v0/users/me/:
    get:
      operationId: users_me_retrieve
      description: User retrieve and update viewsets for the current user
      tags:
      - users
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    BasketItemWithProduct:
      type: object
      description: Basket item model serializer with product information
      properties:
        basket:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        product:
          $ref: '#/components/schemas/Product'
        id:
          type: integer
          readOnly: true
        price:
          type: number
          format: double
          description: Return the total price of the basket item with discounts.
          readOnly: true
        discounted_price:
          type: number
          format: double
          description: |-
            Get the price of the basket item with applicable discounts.

            Returns:
                Decimal: The price of the basket item reduced by an applicable discount.
          readOnly: true
      required:
      - basket
      - discounted_price
      - id
      - price
      - product
    BasketWithProduct:
      type: object
      description: Basket model serializer with items and products
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        basket_items:
          type: array
          items:
            $ref: '#/components/schemas/BasketItemWithProduct'
        total_price:
          type: number
          format: double
          description: Get the total price for the basket
          readOnly: true
      required:
      - basket_items
      - id
      - total_price
      - user
    IntegratedSystem:
      type: object
      description: Serializer for IntegratedSystem model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 80
        description:
          type: string
      required:
      - id
      - name
    IntegratedSystemRequest:
      type: object
      description: Serializer for IntegratedSystem model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 80
        description:
          type: string
      required:
      - name
    Line:
      type: object
      description: Serializes a line item for an order.
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        item_description:
          type: string
          description: Return the item description
          readOnly: true
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        product:
          $ref: '#/components/schemas/Product'
      required:
      - id
      - item_description
      - product
      - quantity
      - total_price
      - unit_price
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        user_ip:
          type: string
          description: The IP address of the user.
          maxLength: 46
        user_taxable_country_code:
          type: string
          nullable: true
          description: The country code for the user for this basket for tax purposes.
          maxLength: 2
        user_taxable_geolocation_type:
          allOf:
          - $ref: '#/components/schemas/UserTaxableGeolocationTypeEnum'
          description: |-
            How the user's location was determined for tax purposes.

            * `profile` - profile
            * `geoip` - geoip
            * `none` - none
        user_blockable_country_code:
          type: string
          nullable: true
          description: The country code for the user for this basket for blocked items.
          maxLength: 2
        user_blockable_geolocation_type:
          type: string
          description: How the user's location was determined for blocked items.
          maxLength: 15
        user:
          type: integer
        integrated_system:
          type: integer
        tax_rate:
          type: integer
          nullable: true
          description: The tax rate assessed for this basket.
        discounts:
          type: array
          items:
            type: integer
      required:
      - created_on
      - discounts
      - id
      - integrated_system
      - updated_on
      - user
    OrderHistory:
      type: object
      description: Serializer for order history.
      properties:
        id:
          type: integer
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        reference_number:
          type: string
          maxLength: 255
        purchaser:
          type: integer
        total_price_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_on
      - id
      - lines
      - purchaser
      - total_price_paid
      - updated_on
    PaginatedBasketWithProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasketWithProduct'
    PaginatedIntegratedSystemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/IntegratedSystem'
    PaginatedOrderHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderHistory'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PatchedIntegratedSystemRequest:
      type: object
      description: Serializer for IntegratedSystem model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 80
        description:
          type: string
    PatchedProductRequest:
      type: object
      description: Serializer for Product model.
      properties:
        sku:
          type: string
          minLength: 1
          description: SKU of the product.
          maxLength: 255
        name:
          type: string
          minLength: 1
          description: Short name of the product, displayed in carts/etc.
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          description: Price (decimal to two places)
        description:
          type: string
          minLength: 1
          description: Long description of the product.
        system_data:
          nullable: true
          description: System-specific data for the product (in JSON).
        system:
          type: integer
          description: Owner system of the product.
    Product:
      type: object
      description: Serializer for Product model.
      properties:
        id:
          type: integer
          readOnly: true
        deleted_on:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        deleted_by_cascade:
          type: boolean
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        sku:
          type: string
          description: SKU of the product.
          maxLength: 255
        name:
          type: string
          description: Short name of the product, displayed in carts/etc.
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          description: Price (decimal to two places)
        description:
          type: string
          description: Long description of the product.
        system_data:
          nullable: true
          description: System-specific data for the product (in JSON).
        system:
          type: integer
          description: Owner system of the product.
      required:
      - created_on
      - deleted_by_cascade
      - deleted_on
      - description
      - id
      - name
      - price
      - sku
      - system
      - updated_on
    ProductRequest:
      type: object
      description: Serializer for Product model.
      properties:
        sku:
          type: string
          minLength: 1
          description: SKU of the product.
          maxLength: 255
        name:
          type: string
          minLength: 1
          description: Short name of the product, displayed in carts/etc.
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          description: Price (decimal to two places)
        description:
          type: string
          minLength: 1
          description: Long description of the product.
        system_data:
          nullable: true
          description: System-specific data for the product (in JSON).
        system:
          type: integer
          description: Owner system of the product.
      required:
      - description
      - name
      - price
      - sku
      - system
    StateEnum:
      enum:
      - pending
      - fulfilled
      - canceled
      - refunded
      - declined
      - errored
      - review
      type: string
      description: |-
        * `pending` - Pending
        * `fulfilled` - Fulfilled
        * `canceled` - Canceled
        * `refunded` - Refunded
        * `declined` - Declined
        * `errored` - Errored
        * `review` - Review
      x-enum-descriptions:
      - Pending
      - Fulfilled
      - Canceled
      - Refunded
      - Declined
      - Errored
      - Review
    User:
      type: object
      description: Serializer for User model.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - id
      - username
    UserTaxableGeolocationTypeEnum:
      enum:
      - profile
      - geoip
      - none
      type: string
      description: |-
        * `profile` - profile
        * `geoip` - geoip
        * `none` - none
      x-enum-descriptions:
      - profile
      - geoip
      - none
