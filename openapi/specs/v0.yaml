openapi: 3.0.3
info:
  title: MIT OL Unified Ecommerce API
  version: 0.0.1 (v0)
  description: MIT public API
paths:
  /api/v0/meta/integrated_system/:
    get:
      operationId: meta_integrated_system_list
      description: Viewset for IntegratedSystem model.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIntegratedSystemList'
          description: ''
    post:
      operationId: meta_integrated_system_create
      description: Viewset for IntegratedSystem model.
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
  /api/v0/meta/integrated_system/{id}/:
    get:
      operationId: meta_integrated_system_retrieve
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
    put:
      operationId: meta_integrated_system_update
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IntegratedSystemRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
    patch:
      operationId: meta_integrated_system_partial_update
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIntegratedSystemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIntegratedSystemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIntegratedSystemRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedSystem'
          description: ''
    delete:
      operationId: meta_integrated_system_destroy
      description: Viewset for IntegratedSystem model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this integrated system.
        required: true
      tags:
      - meta
      responses:
        '204':
          description: No response body
  /api/v0/meta/product/:
    get:
      operationId: meta_product_list
      description: Viewset for Product model.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: system__slug
        schema:
          type: string
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: meta_product_create
      description: Viewset for Product model.
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v0/meta/product/{id}/:
    get:
      operationId: meta_product_retrieve
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: meta_product_update
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: meta_product_partial_update
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: meta_product_destroy
      description: Viewset for Product model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - meta
      responses:
        '204':
          description: No response body
  /api/v0/meta/product/preload/{system_slug}/{sku}/:
    get:
      operationId: meta_product_preload_retrieve
      description: Pre-loads the product metadata for a given SKU, even if the SKU
        doesn't exist yet.
      parameters:
      - in: path
        name: sku
        schema:
          type: string
          pattern: ^[^/]+$
        required: true
      - in: path
        name: system_slug
        schema:
          type: string
          pattern: ^[^/]+$
        required: true
      tags:
      - meta
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v0/payments/basketitems/:
    get:
      operationId: payments_basketitems_list
      description: Returns the basket items for the current user.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasketItemList'
          description: ''
    post:
      operationId: payments_basketitems_create
      description: ViewSet for handling BasketItem operations.
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketItem'
          description: ''
  /api/v0/payments/basketitems/{id}/:
    get:
      operationId: payments_basketitems_retrieve
      description: Returns the basket items for the current user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this basket item.
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketItem'
          description: ''
    put:
      operationId: payments_basketitems_update
      description: ViewSet for handling BasketItem operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this basket item.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketItem'
          description: ''
    patch:
      operationId: payments_basketitems_partial_update
      description: ViewSet for handling BasketItem operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this basket item.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBasketItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBasketItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBasketItemRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketItem'
          description: ''
    delete:
      operationId: payments_basketitems_destroy
      description: ViewSet for handling BasketItem operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this basket item.
        required: true
      tags:
      - payments
      responses:
        '204':
          description: No response body
  /api/v0/payments/baskets/:
    get:
      operationId: payments_baskets_list
      description: Retrives the current user's baskets, one per system.
      parameters:
      - in: query
        name: integrated_system
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasketWithProductList'
          description: ''
  /api/v0/payments/baskets/{id}/:
    get:
      operationId: payments_baskets_retrieve
      description: Retrieve a basket for the current user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketWithProduct'
          description: ''
  /api/v0/payments/baskets/add_discount/{system_slug}/:
    post:
      operationId: payments_baskets_add_discount_create
      description: Creates or updates a basket for the current user, adding the discount
        if valid.
      parameters:
      - in: query
        name: discount_code
        schema:
          type: string
        required: true
      - in: path
        name: system_slug
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketWithProduct'
          description: ''
  /api/v0/payments/baskets/clear/{system_slug}/:
    delete:
      operationId: payments_baskets_clear_destroy
      description: Clears the basket for the current user.
      parameters:
      - in: path
        name: system_slug
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '204':
          description: No response body
  /api/v0/payments/baskets/create_from_product/{system_slug}/{sku}/:
    post:
      operationId: payments_baskets_create_from_product_create
      description: Creates or updates a basket for the current user, adding the selected
        product.
      parameters:
      - in: path
        name: sku
        schema:
          type: string
        required: true
      - in: path
        name: system_slug
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketWithProduct'
          description: ''
  /api/v0/payments/baskets/create_from_product/{system_slug}/{sku}/{discount_code}/:
    post:
      operationId: create_basket_from_product_with_discount
      description: Creates or updates a basket for the current user, adding the selected
        product and discount.
      parameters:
      - in: path
        name: discount_code
        schema:
          type: string
        required: true
      - in: path
        name: sku
        schema:
          type: string
        required: true
      - in: path
        name: system_slug
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketWithProduct'
          description: ''
  /api/v0/payments/baskets/create_with_products/:
    post:
      operationId: payments_baskets_create_with_products_create
      description: Creates or updates a basket for the current user, adding the selected
        product.
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBasketWithProductsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateBasketWithProductsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateBasketWithProductsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketWithProduct'
          description: ''
  /api/v0/payments/baskets/for_system/{system_slug}/:
    get:
      operationId: payments_baskets_for_system_retrieve
      description: Returns or creates a basket for the current user and system.
      parameters:
      - in: path
        name: system_slug
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketWithProduct'
          description: ''
  /api/v0/payments/checkout/{system_slug}/:
    post:
      operationId: payments_checkout_create
      description: Generates and returns the form payload for the current basket for
        the specified system, which can be used to start the checkout process.
      parameters:
      - in: path
        name: system_slug
        schema:
          type: string
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberSourceCheckout'
          description: ''
  /api/v0/payments/discounts/:
    post:
      operationId: payments_discounts_create
      description: Create a discount.
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api/v0/payments/orders/history/:
    get:
      operationId: payments_orders_history_list
      description: Retrives the current user's completed orders.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderHistoryList'
          description: ''
  /api/v0/payments/orders/history/{id}/:
    get:
      operationId: payments_orders_history_retrieve
      description: Retrieve a completed order for the current user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderHistory'
          description: ''
  /api/v0/refunds/create_from_order:
    post:
      operationId: refunds_create_from_order_create
      description: Create a refund from an existing order, optionally specifying which
        lines to refund.
      tags:
      - refunds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFromOrderApiRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateFromOrderApiRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateFromOrderApiRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
  /api/v0/refunds/lines/:
    get:
      operationId: refunds_lines_list
      description: API endpoint for line items.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - refunds
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRequestLineList'
          description: ''
    post:
      operationId: refunds_lines_create
      description: API endpoint for line items.
      tags:
      - refunds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestLineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestLineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestLineRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLine'
          description: ''
  /api/v0/refunds/lines/{id}/:
    get:
      operationId: refunds_lines_retrieve
      description: API endpoint for line items.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request line.
        required: true
      tags:
      - refunds
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLine'
          description: ''
    put:
      operationId: refunds_lines_update
      description: API endpoint for line items.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request line.
        required: true
      tags:
      - refunds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestLineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestLineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestLineRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLine'
          description: ''
    patch:
      operationId: refunds_lines_partial_update
      description: API endpoint for line items.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request line.
        required: true
      tags:
      - refunds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRequestLineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRequestLineRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRequestLineRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLine'
          description: ''
    delete:
      operationId: refunds_lines_destroy
      description: API endpoint for line items.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request line.
        required: true
      tags:
      - refunds
      responses:
        '204':
          description: No response body
  /api/v0/refunds/requests/:
    get:
      operationId: refunds_requests_list
      description: API endpoint for refund requests.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - refunds
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRequestList'
          description: ''
    post:
      operationId: refunds_requests_create
      description: API endpoint for refund requests.
      tags:
      - refunds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
  /api/v0/refunds/requests/{id}/:
    get:
      operationId: refunds_requests_retrieve
      description: API endpoint for refund requests.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request line.
        required: true
      tags:
      - refunds
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
    put:
      operationId: refunds_requests_update
      description: API endpoint for refund requests.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request line.
        required: true
      tags:
      - refunds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
    patch:
      operationId: refunds_requests_partial_update
      description: API endpoint for refund requests.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request line.
        required: true
      tags:
      - refunds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRequestRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
    delete:
      operationId: refunds_requests_destroy
      description: API endpoint for refund requests.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this request line.
        required: true
      tags:
      - refunds
      responses:
        '204':
          description: No response body
  /api/v0/users/me/:
    get:
      operationId: users_me_retrieve
      description: User retrieve and update viewsets for the current user
      tags:
      - users
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    BasketItem:
      type: object
      description: BasketItem model serializer
      properties:
        basket:
          type: integer
        product:
          type: integer
        id:
          type: integer
          readOnly: true
      required:
      - basket
      - id
      - product
    BasketItemRequest:
      type: object
      description: BasketItem model serializer
      properties:
        basket:
          type: integer
        product:
          type: integer
      required:
      - basket
      - product
    BasketItemWithProduct:
      type: object
      description: Basket item model serializer with product information
      properties:
        product:
          $ref: '#/components/schemas/Product'
        id:
          type: integer
          readOnly: true
        price:
          type: number
          format: double
          description: Return the total price of the basket item with discounts.
          readOnly: true
        discounted_price:
          type: number
          format: double
          description: |-
            Get the price of the basket item with applicable discounts.

            Returns:
                Decimal: The price of the basket item reduced by an applicable discount.
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        discount_applied:
          allOf:
          - $ref: '#/components/schemas/SimpleDiscount'
          readOnly: true
      required:
      - discount_applied
      - discounted_price
      - id
      - price
      - product
    BasketWithProduct:
      type: object
      description: Basket model serializer with items and products
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        integrated_system:
          $ref: '#/components/schemas/IntegratedSystem'
        basket_items:
          type: array
          items:
            $ref: '#/components/schemas/BasketItemWithProduct'
        subtotal:
          type: number
          format: double
          description: Get the subtotal for the basket
          readOnly: true
        tax:
          type: number
          format: double
          description: Get the tax for the basket
          readOnly: true
        tax_rate:
          $ref: '#/components/schemas/TaxRate'
        total_price:
          type: number
          format: double
          description: Get the total price for the basket
          readOnly: true
      required:
      - basket_items
      - id
      - integrated_system
      - subtotal
      - tax
      - tax_rate
      - total_price
      - user
    Company:
      type: object
      description: Serializer for companies.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
    CountryCodeEnum:
      enum:
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BQ
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - CV
      - KH
      - CM
      - CA
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CW
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - SZ
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - KP
      - MK
      - MP
      - 'NO'
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SX
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - KR
      - SS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - GB
      - UM
      - US
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
      type: string
      description: |-
        * `AF` - Afghanistan
        * `AX` - Åland Islands
        * `AL` - Albania
        * `DZ` - Algeria
        * `AS` - American Samoa
        * `AD` - Andorra
        * `AO` - Angola
        * `AI` - Anguilla
        * `AQ` - Antarctica
        * `AG` - Antigua and Barbuda
        * `AR` - Argentina
        * `AM` - Armenia
        * `AW` - Aruba
        * `AU` - Australia
        * `AT` - Austria
        * `AZ` - Azerbaijan
        * `BS` - Bahamas
        * `BH` - Bahrain
        * `BD` - Bangladesh
        * `BB` - Barbados
        * `BY` - Belarus
        * `BE` - Belgium
        * `BZ` - Belize
        * `BJ` - Benin
        * `BM` - Bermuda
        * `BT` - Bhutan
        * `BO` - Bolivia
        * `BQ` - Bonaire, Sint Eustatius and Saba
        * `BA` - Bosnia and Herzegovina
        * `BW` - Botswana
        * `BV` - Bouvet Island
        * `BR` - Brazil
        * `IO` - British Indian Ocean Territory
        * `BN` - Brunei
        * `BG` - Bulgaria
        * `BF` - Burkina Faso
        * `BI` - Burundi
        * `CV` - Cabo Verde
        * `KH` - Cambodia
        * `CM` - Cameroon
        * `CA` - Canada
        * `KY` - Cayman Islands
        * `CF` - Central African Republic
        * `TD` - Chad
        * `CL` - Chile
        * `CN` - China
        * `CX` - Christmas Island
        * `CC` - Cocos (Keeling) Islands
        * `CO` - Colombia
        * `KM` - Comoros
        * `CG` - Congo
        * `CD` - Congo (the Democratic Republic of the)
        * `CK` - Cook Islands
        * `CR` - Costa Rica
        * `CI` - Côte d'Ivoire
        * `HR` - Croatia
        * `CU` - Cuba
        * `CW` - Curaçao
        * `CY` - Cyprus
        * `CZ` - Czechia
        * `DK` - Denmark
        * `DJ` - Djibouti
        * `DM` - Dominica
        * `DO` - Dominican Republic
        * `EC` - Ecuador
        * `EG` - Egypt
        * `SV` - El Salvador
        * `GQ` - Equatorial Guinea
        * `ER` - Eritrea
        * `EE` - Estonia
        * `SZ` - Eswatini
        * `ET` - Ethiopia
        * `FK` - Falkland Islands (Malvinas)
        * `FO` - Faroe Islands
        * `FJ` - Fiji
        * `FI` - Finland
        * `FR` - France
        * `GF` - French Guiana
        * `PF` - French Polynesia
        * `TF` - French Southern Territories
        * `GA` - Gabon
        * `GM` - Gambia
        * `GE` - Georgia
        * `DE` - Germany
        * `GH` - Ghana
        * `GI` - Gibraltar
        * `GR` - Greece
        * `GL` - Greenland
        * `GD` - Grenada
        * `GP` - Guadeloupe
        * `GU` - Guam
        * `GT` - Guatemala
        * `GG` - Guernsey
        * `GN` - Guinea
        * `GW` - Guinea-Bissau
        * `GY` - Guyana
        * `HT` - Haiti
        * `HM` - Heard Island and McDonald Islands
        * `VA` - Holy See
        * `HN` - Honduras
        * `HK` - Hong Kong
        * `HU` - Hungary
        * `IS` - Iceland
        * `IN` - India
        * `ID` - Indonesia
        * `IR` - Iran
        * `IQ` - Iraq
        * `IE` - Ireland
        * `IM` - Isle of Man
        * `IL` - Israel
        * `IT` - Italy
        * `JM` - Jamaica
        * `JP` - Japan
        * `JE` - Jersey
        * `JO` - Jordan
        * `KZ` - Kazakhstan
        * `KE` - Kenya
        * `KI` - Kiribati
        * `KW` - Kuwait
        * `KG` - Kyrgyzstan
        * `LA` - Laos
        * `LV` - Latvia
        * `LB` - Lebanon
        * `LS` - Lesotho
        * `LR` - Liberia
        * `LY` - Libya
        * `LI` - Liechtenstein
        * `LT` - Lithuania
        * `LU` - Luxembourg
        * `MO` - Macao
        * `MG` - Madagascar
        * `MW` - Malawi
        * `MY` - Malaysia
        * `MV` - Maldives
        * `ML` - Mali
        * `MT` - Malta
        * `MH` - Marshall Islands
        * `MQ` - Martinique
        * `MR` - Mauritania
        * `MU` - Mauritius
        * `YT` - Mayotte
        * `MX` - Mexico
        * `FM` - Micronesia
        * `MD` - Moldova
        * `MC` - Monaco
        * `MN` - Mongolia
        * `ME` - Montenegro
        * `MS` - Montserrat
        * `MA` - Morocco
        * `MZ` - Mozambique
        * `MM` - Myanmar
        * `NA` - Namibia
        * `NR` - Nauru
        * `NP` - Nepal
        * `NL` - Netherlands
        * `NC` - New Caledonia
        * `NZ` - New Zealand
        * `NI` - Nicaragua
        * `NE` - Niger
        * `NG` - Nigeria
        * `NU` - Niue
        * `NF` - Norfolk Island
        * `KP` - North Korea
        * `MK` - North Macedonia
        * `MP` - Northern Mariana Islands
        * `NO` - Norway
        * `OM` - Oman
        * `PK` - Pakistan
        * `PW` - Palau
        * `PS` - Palestine, State of
        * `PA` - Panama
        * `PG` - Papua New Guinea
        * `PY` - Paraguay
        * `PE` - Peru
        * `PH` - Philippines
        * `PN` - Pitcairn
        * `PL` - Poland
        * `PT` - Portugal
        * `PR` - Puerto Rico
        * `QA` - Qatar
        * `RE` - Réunion
        * `RO` - Romania
        * `RU` - Russia
        * `RW` - Rwanda
        * `BL` - Saint Barthélemy
        * `SH` - Saint Helena, Ascension and Tristan da Cunha
        * `KN` - Saint Kitts and Nevis
        * `LC` - Saint Lucia
        * `MF` - Saint Martin (French part)
        * `PM` - Saint Pierre and Miquelon
        * `VC` - Saint Vincent and the Grenadines
        * `WS` - Samoa
        * `SM` - San Marino
        * `ST` - Sao Tome and Principe
        * `SA` - Saudi Arabia
        * `SN` - Senegal
        * `RS` - Serbia
        * `SC` - Seychelles
        * `SL` - Sierra Leone
        * `SG` - Singapore
        * `SX` - Sint Maarten (Dutch part)
        * `SK` - Slovakia
        * `SI` - Slovenia
        * `SB` - Solomon Islands
        * `SO` - Somalia
        * `ZA` - South Africa
        * `GS` - South Georgia and the South Sandwich Islands
        * `KR` - South Korea
        * `SS` - South Sudan
        * `ES` - Spain
        * `LK` - Sri Lanka
        * `SD` - Sudan
        * `SR` - Suriname
        * `SJ` - Svalbard and Jan Mayen
        * `SE` - Sweden
        * `CH` - Switzerland
        * `SY` - Syria
        * `TW` - Taiwan
        * `TJ` - Tajikistan
        * `TZ` - Tanzania
        * `TH` - Thailand
        * `TL` - Timor-Leste
        * `TG` - Togo
        * `TK` - Tokelau
        * `TO` - Tonga
        * `TT` - Trinidad and Tobago
        * `TN` - Tunisia
        * `TR` - Türkiye
        * `TM` - Turkmenistan
        * `TC` - Turks and Caicos Islands
        * `TV` - Tuvalu
        * `UG` - Uganda
        * `UA` - Ukraine
        * `AE` - United Arab Emirates
        * `GB` - United Kingdom
        * `UM` - United States Minor Outlying Islands
        * `US` - United States of America
        * `UY` - Uruguay
        * `UZ` - Uzbekistan
        * `VU` - Vanuatu
        * `VE` - Venezuela
        * `VN` - Vietnam
        * `VG` - Virgin Islands (British)
        * `VI` - Virgin Islands (U.S.)
        * `WF` - Wallis and Futuna
        * `EH` - Western Sahara
        * `YE` - Yemen
        * `ZM` - Zambia
        * `ZW` - Zimbabwe
      x-enum-descriptions:
      - Afghanistan
      - Åland Islands
      - Albania
      - Algeria
      - American Samoa
      - Andorra
      - Angola
      - Anguilla
      - Antarctica
      - Antigua and Barbuda
      - Argentina
      - Armenia
      - Aruba
      - Australia
      - Austria
      - Azerbaijan
      - Bahamas
      - Bahrain
      - Bangladesh
      - Barbados
      - Belarus
      - Belgium
      - Belize
      - Benin
      - Bermuda
      - Bhutan
      - Bolivia
      - Bonaire, Sint Eustatius and Saba
      - Bosnia and Herzegovina
      - Botswana
      - Bouvet Island
      - Brazil
      - British Indian Ocean Territory
      - Brunei
      - Bulgaria
      - Burkina Faso
      - Burundi
      - Cabo Verde
      - Cambodia
      - Cameroon
      - Canada
      - Cayman Islands
      - Central African Republic
      - Chad
      - Chile
      - China
      - Christmas Island
      - Cocos (Keeling) Islands
      - Colombia
      - Comoros
      - Congo
      - Congo (the Democratic Republic of the)
      - Cook Islands
      - Costa Rica
      - Côte d'Ivoire
      - Croatia
      - Cuba
      - Curaçao
      - Cyprus
      - Czechia
      - Denmark
      - Djibouti
      - Dominica
      - Dominican Republic
      - Ecuador
      - Egypt
      - El Salvador
      - Equatorial Guinea
      - Eritrea
      - Estonia
      - Eswatini
      - Ethiopia
      - Falkland Islands (Malvinas)
      - Faroe Islands
      - Fiji
      - Finland
      - France
      - French Guiana
      - French Polynesia
      - French Southern Territories
      - Gabon
      - Gambia
      - Georgia
      - Germany
      - Ghana
      - Gibraltar
      - Greece
      - Greenland
      - Grenada
      - Guadeloupe
      - Guam
      - Guatemala
      - Guernsey
      - Guinea
      - Guinea-Bissau
      - Guyana
      - Haiti
      - Heard Island and McDonald Islands
      - Holy See
      - Honduras
      - Hong Kong
      - Hungary
      - Iceland
      - India
      - Indonesia
      - Iran
      - Iraq
      - Ireland
      - Isle of Man
      - Israel
      - Italy
      - Jamaica
      - Japan
      - Jersey
      - Jordan
      - Kazakhstan
      - Kenya
      - Kiribati
      - Kuwait
      - Kyrgyzstan
      - Laos
      - Latvia
      - Lebanon
      - Lesotho
      - Liberia
      - Libya
      - Liechtenstein
      - Lithuania
      - Luxembourg
      - Macao
      - Madagascar
      - Malawi
      - Malaysia
      - Maldives
      - Mali
      - Malta
      - Marshall Islands
      - Martinique
      - Mauritania
      - Mauritius
      - Mayotte
      - Mexico
      - Micronesia
      - Moldova
      - Monaco
      - Mongolia
      - Montenegro
      - Montserrat
      - Morocco
      - Mozambique
      - Myanmar
      - Namibia
      - Nauru
      - Nepal
      - Netherlands
      - New Caledonia
      - New Zealand
      - Nicaragua
      - Niger
      - Nigeria
      - Niue
      - Norfolk Island
      - North Korea
      - North Macedonia
      - Northern Mariana Islands
      - Norway
      - Oman
      - Pakistan
      - Palau
      - Palestine, State of
      - Panama
      - Papua New Guinea
      - Paraguay
      - Peru
      - Philippines
      - Pitcairn
      - Poland
      - Portugal
      - Puerto Rico
      - Qatar
      - Réunion
      - Romania
      - Russia
      - Rwanda
      - Saint Barthélemy
      - Saint Helena, Ascension and Tristan da Cunha
      - Saint Kitts and Nevis
      - Saint Lucia
      - Saint Martin (French part)
      - Saint Pierre and Miquelon
      - Saint Vincent and the Grenadines
      - Samoa
      - San Marino
      - Sao Tome and Principe
      - Saudi Arabia
      - Senegal
      - Serbia
      - Seychelles
      - Sierra Leone
      - Singapore
      - Sint Maarten (Dutch part)
      - Slovakia
      - Slovenia
      - Solomon Islands
      - Somalia
      - South Africa
      - South Georgia and the South Sandwich Islands
      - South Korea
      - South Sudan
      - Spain
      - Sri Lanka
      - Sudan
      - Suriname
      - Svalbard and Jan Mayen
      - Sweden
      - Switzerland
      - Syria
      - Taiwan
      - Tajikistan
      - Tanzania
      - Thailand
      - Timor-Leste
      - Togo
      - Tokelau
      - Tonga
      - Trinidad and Tobago
      - Tunisia
      - Türkiye
      - Turkmenistan
      - Turks and Caicos Islands
      - Tuvalu
      - Uganda
      - Ukraine
      - United Arab Emirates
      - United Kingdom
      - United States Minor Outlying Islands
      - United States of America
      - Uruguay
      - Uzbekistan
      - Vanuatu
      - Venezuela
      - Vietnam
      - Virgin Islands (British)
      - Virgin Islands (U.S.)
      - Wallis and Futuna
      - Western Sahara
      - Yemen
      - Zambia
      - Zimbabwe
    CreateBasketWithProductsRequest:
      type: object
      description: Serializer for creating a basket with products. (For OpenAPI spec.)
      properties:
        system_slug:
          type: string
          minLength: 1
        skus:
          type: array
          items:
            $ref: '#/components/schemas/CreateBasketWithProductsSkuRequest'
        checkout:
          type: boolean
        discount_code:
          type: string
          minLength: 1
      required:
      - checkout
      - discount_code
      - skus
      - system_slug
    CreateBasketWithProductsSkuRequest:
      type: object
      description: Defines the schema for a SKU in the CreateBasketWithProductsSerializer.
      properties:
        sku:
          type: string
          minLength: 1
        quantity:
          type: integer
          minimum: 1
      required:
      - quantity
      - sku
    CreateFromOrderApiRequest:
      type: object
      description: Serializer for the create from order API.
      properties:
        order:
          type: integer
        lines:
          type: array
          items:
            type: integer
      required:
      - lines
      - order
    CyberSourceCheckout:
      type: object
      description: Really basic serializer for the payload that we need to send to
        CyberSource.
      properties:
        payload:
          type: object
          additionalProperties: {}
        url:
          type: string
        method:
          type: string
      required:
      - method
      - payload
      - url
    Discount:
      type: object
      description: Serializer for discounts.
      properties:
        id:
          type: integer
          readOnly: true
        discount_code:
          type: string
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        payment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        max_redemptions:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        activation_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable before this
            date.
        expiration_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable after this
            date.
        integrated_system:
          $ref: '#/components/schemas/IntegratedSystem'
        product:
          $ref: '#/components/schemas/Product'
        assigned_users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        company:
          $ref: '#/components/schemas/Company'
      required:
      - amount
      - assigned_users
      - company
      - discount_code
      - id
      - integrated_system
      - product
    DiscountTypeEnum:
      enum:
      - percent-off
      - dollars-off
      - fixed-price
      type: string
      description: |-
        * `percent-off` - percent-off
        * `dollars-off` - dollars-off
        * `fixed-price` - fixed-price
      x-enum-descriptions:
      - percent-off
      - dollars-off
      - fixed-price
    IntegratedSystem:
      type: object
      description: Serializer for IntegratedSystem model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 80
        description:
          type: string
        homepage_url:
          type: string
          format: uri
          maxLength: 200
      required:
      - id
      - name
    IntegratedSystemRequest:
      type: object
      description: Serializer for IntegratedSystem model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 80
        description:
          type: string
        homepage_url:
          type: string
          format: uri
          maxLength: 200
      required:
      - name
    Line:
      type: object
      description: Serializes a line item for an order.
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        item_description:
          type: string
          description: Return the item description
          readOnly: true
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        product:
          $ref: '#/components/schemas/Product'
      required:
      - id
      - item_description
      - product
      - quantity
      - total_price
      - unit_price
    LineRequest:
      type: object
      description: Serializes a line item for an order.
      properties:
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        product:
          $ref: '#/components/schemas/ProductRequest'
      required:
      - product
      - quantity
      - total_price
      - unit_price
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        automatic:
          type: boolean
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        redemption_type:
          $ref: '#/components/schemas/RedemptionTypeEnum'
        payment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        max_redemptions:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        discount_code:
          type: string
          maxLength: 100
        activation_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable before this
            date.
        expiration_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable after this
            date.
        is_bulk:
          type: boolean
        transaction_number:
          type: string
          maxLength: 255
        integrated_system:
          type: integer
          nullable: true
        product:
          type: integer
          nullable: true
        bulk_discount_collection:
          type: integer
          nullable: true
        company:
          type: integer
          nullable: true
        assigned_users:
          type: array
          items:
            type: integer
            nullable: true
      required:
      - amount
      - created_on
      - discount_code
      - discount_type
      - id
      - redemption_type
      - updated_on
    NestedRequest:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        automatic:
          type: boolean
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        redemption_type:
          $ref: '#/components/schemas/RedemptionTypeEnum'
        payment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        max_redemptions:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        discount_code:
          type: string
          minLength: 1
          maxLength: 100
        activation_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable before this
            date.
        expiration_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable after this
            date.
        is_bulk:
          type: boolean
        transaction_number:
          type: string
          maxLength: 255
        integrated_system:
          type: integer
          nullable: true
        product:
          type: integer
          nullable: true
        bulk_discount_collection:
          type: integer
          nullable: true
        company:
          type: integer
          nullable: true
        assigned_users:
          type: array
          items:
            type: integer
            nullable: true
      required:
      - amount
      - discount_code
      - discount_type
      - redemption_type
    NullEnum:
      enum:
      - null
    Order:
      type: object
      description: Serializes an order.
      properties:
        id:
          type: integer
          readOnly: true
        reference_number:
          type: string
          maxLength: 255
        state:
          $ref: '#/components/schemas/StateEnum'
        purchaser:
          $ref: '#/components/schemas/User'
        total_price_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
        redeemed_discounts:
          type: array
          items:
            $ref: '#/components/schemas/RedeemedDiscount'
        refunds:
          type: array
          items: {}
          description: |-
            Return refunds for the order.

            Returns an empty set for now, don't have that set up yet really. In
            MITx Online this returned _transactions_ that were refunds, so we want
            to return the requests that we're now collecting.
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        street_address:
          allOf:
          - $ref: '#/components/schemas/TransactionDataPurchaser'
          readOnly: true
      required:
      - created_on
      - id
      - lines
      - purchaser
      - redeemed_discounts
      - refunds
      - street_address
      - total_price_paid
      - transactions
    OrderHistory:
      type: object
      description: Serializer for order history.
      properties:
        id:
          type: integer
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        reference_number:
          type: string
          maxLength: 255
        purchaser:
          type: integer
        total_price_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        discounts_applied:
          allOf:
          - $ref: '#/components/schemas/SimpleDiscount'
          readOnly: true
        transactions:
          allOf:
          - $ref: '#/components/schemas/Transaction'
          readOnly: true
      required:
      - created_on
      - discounts_applied
      - id
      - lines
      - purchaser
      - total_price_paid
      - transactions
      - updated_on
    OrderRequest:
      type: object
      description: Serializes an order.
      properties:
        reference_number:
          type: string
          maxLength: 255
        state:
          $ref: '#/components/schemas/StateEnum'
        purchaser:
          $ref: '#/components/schemas/UserRequest'
        total_price_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        lines:
          type: array
          items:
            $ref: '#/components/schemas/LineRequest'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionRequest'
      required:
      - lines
      - purchaser
      - total_price_paid
      - transactions
    PaginatedBasketItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasketItem'
    PaginatedBasketWithProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasketWithProduct'
    PaginatedIntegratedSystemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/IntegratedSystem'
    PaginatedOrderHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderHistory'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedRequestLineList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RequestLine'
    PaginatedRequestList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Request'
    PatchedBasketItemRequest:
      type: object
      description: BasketItem model serializer
      properties:
        basket:
          type: integer
        product:
          type: integer
    PatchedIntegratedSystemRequest:
      type: object
      description: Serializer for IntegratedSystem model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 80
        description:
          type: string
        homepage_url:
          type: string
          format: uri
          maxLength: 200
    PatchedProductRequest:
      type: object
      description: Serializer for Product model.
      properties:
        sku:
          type: string
          minLength: 1
          description: SKU of the product.
          maxLength: 255
        name:
          type: string
          minLength: 1
          description: Short name of the product, displayed in carts/etc.
          maxLength: 255
        description:
          type: string
          minLength: 1
          description: Long description of the product.
        system_data:
          nullable: true
          description: System-specific data for the product (in JSON).
        system:
          type: integer
          description: Owner system of the product.
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          description: Price (decimal to two places)
        image_metadata:
          nullable: true
          description: Image metadata including URL, alt text, and description (in
            JSON).
        details_url:
          type: string
          format: uri
          description: URL to the product details page.
          maxLength: 200
    PatchedRequestLineRequest:
      type: object
      description: Serializer for refund request lines.
      properties:
        refunded_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
          nullable: true
          description: The amount refunded for this line item (may not be the full
            amount charged).
        refund_request:
          type: integer
        line:
          type: integer
          description: The individual line item to refund.
        transactions:
          type: array
          items:
            type: integer
    PatchedRequestRequest:
      type: object
      description: Serializer for refund requests.
      properties:
        lines:
          type: array
          items:
            $ref: '#/components/schemas/RequestLineRequest'
        order:
          $ref: '#/components/schemas/OrderRequest'
        zendesk_ticket:
          type: string
          maxLength: 255
        refund_reason:
          type: string
          description: Reason for refund, supplied by the processing user.
        requester:
          type: integer
    PaymentTypeEnum:
      enum:
      - marketing
      - sales
      - financial-assistance
      - customer-support
      - staff
      - legacy
      - credit_card
      - purchase_order
      type: string
      description: |-
        * `marketing` - marketing
        * `sales` - sales
        * `financial-assistance` - financial-assistance
        * `customer-support` - customer-support
        * `staff` - staff
        * `legacy` - legacy
        * `credit_card` - credit_card
        * `purchase_order` - purchase_order
      x-enum-descriptions:
      - marketing
      - sales
      - financial-assistance
      - customer-support
      - staff
      - legacy
      - credit_card
      - purchase_order
    Product:
      type: object
      description: Serializer for Product model.
      properties:
        id:
          type: integer
          readOnly: true
        sku:
          type: string
          description: SKU of the product.
          maxLength: 255
        name:
          type: string
          description: Short name of the product, displayed in carts/etc.
          maxLength: 255
        description:
          type: string
          description: Long description of the product.
        system_data:
          nullable: true
          description: System-specific data for the product (in JSON).
        system:
          type: integer
          description: Owner system of the product.
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          description: Price (decimal to two places)
        deleted_by_cascade:
          type: boolean
          readOnly: true
        image_metadata:
          nullable: true
          description: Image metadata including URL, alt text, and description (in
            JSON).
        details_url:
          type: string
          format: uri
          description: URL to the product details page.
          maxLength: 200
      required:
      - deleted_by_cascade
      - description
      - id
      - name
      - price
      - sku
      - system
    ProductRequest:
      type: object
      description: Serializer for Product model.
      properties:
        sku:
          type: string
          minLength: 1
          description: SKU of the product.
          maxLength: 255
        name:
          type: string
          minLength: 1
          description: Short name of the product, displayed in carts/etc.
          maxLength: 255
        description:
          type: string
          minLength: 1
          description: Long description of the product.
        system_data:
          nullable: true
          description: System-specific data for the product (in JSON).
        system:
          type: integer
          description: Owner system of the product.
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          description: Price (decimal to two places)
        image_metadata:
          nullable: true
          description: Image metadata including URL, alt text, and description (in
            JSON).
        details_url:
          type: string
          format: uri
          description: URL to the product details page.
          maxLength: 200
      required:
      - description
      - name
      - price
      - sku
      - system
    RedeemedDiscount:
      type: object
      description: DiscountRedemption model serializer
      properties:
        discount:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - discount
    RedemptionTypeEnum:
      enum:
      - one-time
      - one-time-per-user
      - unlimited
      type: string
      description: |-
        * `one-time` - one-time
        * `one-time-per-user` - one-time-per-user
        * `unlimited` - unlimited
      x-enum-descriptions:
      - one-time
      - one-time-per-user
      - unlimited
    Request:
      type: object
      description: Serializer for refund requests.
      properties:
        id:
          type: integer
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/RequestLine'
        order:
          $ref: '#/components/schemas/Order'
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        processed_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        total_refunded:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
          readOnly: true
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        zendesk_ticket:
          type: string
          maxLength: 255
        refund_reason:
          type: string
          description: Reason for refund, supplied by the processing user.
        requester:
          type: integer
        processed_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who processed the request. (Usually blank.)
      required:
      - created_on
      - id
      - lines
      - order
      - processed_by
      - processed_date
      - requester
      - status
      - total_refunded
      - updated_on
    RequestLine:
      type: object
      description: Serializer for refund request lines.
      properties:
        id:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
          description: |-
            The status of this line item.

            * `pending` - pending
            * `created` - created
            * `denied` - denied
            * `approved` - approved
            * `approved-complete` - approved-complete
            * `failed` - failed
        refunded_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
          nullable: true
          description: The amount refunded for this line item (may not be the full
            amount charged).
        refund_request:
          type: integer
        line:
          type: integer
          description: The individual line item to refund.
        transactions:
          type: array
          items:
            type: integer
      required:
      - created_on
      - id
      - line
      - refund_request
      - status
      - updated_on
    RequestLineRequest:
      type: object
      description: Serializer for refund request lines.
      properties:
        refunded_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
          nullable: true
          description: The amount refunded for this line item (may not be the full
            amount charged).
        refund_request:
          type: integer
        line:
          type: integer
          description: The individual line item to refund.
        transactions:
          type: array
          items:
            type: integer
      required:
      - line
      - refund_request
    RequestRequest:
      type: object
      description: Serializer for refund requests.
      properties:
        lines:
          type: array
          items:
            $ref: '#/components/schemas/RequestLineRequest'
        order:
          $ref: '#/components/schemas/OrderRequest'
        zendesk_ticket:
          type: string
          maxLength: 255
        refund_reason:
          type: string
          description: Reason for refund, supplied by the processing user.
        requester:
          type: integer
      required:
      - lines
      - order
      - requester
    SimpleDiscount:
      type: object
      description: Simpler serializer for discounts.
      properties:
        id:
          type: integer
          readOnly: true
        discount_code:
          type: string
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        formatted_discount_amount:
          type: string
          description: |-
            Return the formatted discount amount.

            This quantizes percent discounts to whole numbers. This is probably fine.
          readOnly: true
      required:
      - amount
      - discount_code
      - discount_type
      - formatted_discount_amount
      - id
    StateEnum:
      enum:
      - pending
      - fulfilled
      - canceled
      - refunded
      - declined
      - errored
      - review
      type: string
      description: |-
        * `pending` - Pending
        * `fulfilled` - Fulfilled
        * `canceled` - Canceled
        * `refunded` - Refunded
        * `declined` - Declined
        * `errored` - Errored
        * `review` - Review
      x-enum-descriptions:
      - Pending
      - Fulfilled
      - Canceled
      - Refunded
      - Declined
      - Errored
      - Review
    StatusEnum:
      enum:
      - pending
      - created
      - denied
      - approved
      - approved-complete
      - failed
      type: string
      description: |-
        * `pending` - pending
        * `created` - created
        * `denied` - denied
        * `approved` - approved
        * `approved-complete` - approved-complete
        * `failed` - failed
      x-enum-descriptions:
      - pending
      - created
      - denied
      - approved
      - approved-complete
      - failed
    TaxRate:
      type: object
      description: TaxRate model serializer
      properties:
        id:
          type: integer
          readOnly: true
        country_code:
          $ref: '#/components/schemas/CountryCodeEnum'
        tax_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,4})?$
        tax_rate_name:
          type: string
          maxLength: 100
      required:
      - country_code
      - id
    Transaction:
      type: object
      description: Serializer for transactions.
      properties:
        transaction_id:
          type: string
        transaction_type:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        created_on:
          type: string
          format: date-time
        updated_on:
          type: string
          format: date-time
        reason:
          type: string
        data: {}
        order:
          $ref: '#/components/schemas/TransactionOrder'
      required:
      - amount
      - created_on
      - data
      - order
      - reason
      - transaction_id
      - transaction_type
      - updated_on
    TransactionDataPurchaser:
      type: object
      description: Serializes a transaction's purchaser data.
      properties:
        first_name:
          type: string
        last_name:
          type: string
        country:
          type: string
        email:
          type: string
          format: email
        street_address:
          type: array
          items:
            type: string
        city:
          type: string
        state_or_territory:
          type: string
        postal_code:
          type: string
        company:
          type: string
      required:
      - city
      - company
      - country
      - email
      - first_name
      - last_name
      - postal_code
      - state_or_territory
      - street_address
    TransactionOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        reference_number:
          type: string
          readOnly: true
      required:
      - created_on
      - id
      - reference_number
    TransactionRequest:
      type: object
      description: Serializer for transactions.
      properties:
        transaction_id:
          type: string
          minLength: 1
        transaction_type:
          type: string
          minLength: 1
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        created_on:
          type: string
          format: date-time
        updated_on:
          type: string
          format: date-time
        reason:
          type: string
          minLength: 1
        data: {}
      required:
      - amount
      - created_on
      - data
      - reason
      - transaction_id
      - transaction_type
      - updated_on
    User:
      type: object
      description: Serializer for User model.
      properties:
        id:
          type: integer
          readOnly: true
        global_id:
          type: string
          description: The SSO ID (usually a Keycloak UUID) for the user.
          maxLength: 255
        username:
          type: string
          maxLength: 150
        email:
          type: string
          nullable: true
          description: Return the email.
          readOnly: true
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
      required:
      - email
      - id
      - username
    UserRequest:
      type: object
      description: Serializer for User model.
      properties:
        global_id:
          type: string
          description: The SSO ID (usually a Keycloak UUID) for the user.
          maxLength: 255
        username:
          type: string
          minLength: 1
          maxLength: 150
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
      required:
      - username
