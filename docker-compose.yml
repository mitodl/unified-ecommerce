x-environment: &py-environment
  DEBUG: ${DEBUG:-True}
  DEV_ENV: "True" # necessary to have nginx connect to web container
  NODE_ENV: ${NODE_ENV:-development}
  DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
  MITOL_UE_SECURE_SSL_REDIRECT: "False"
  MITOL_UE_DB_DISABLE_SSL: "True"
  MITOL_UE_FEATURES_DEFAULT: ${MITOPEN_FEATURES_DEFAULT:-True}
  CELERY_TASK_ALWAYS_EAGER: "False"
  CELERY_BROKER_URL: redis://redis:6379/4
  CELERY_RESULT_BACKEND: redis://redis:6379/4
  DOCKER_HOST: ${DOCKER_HOST:-missing}
  POSTGRES_PORT: ${POSTGRES_PORT:-5432}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}

services:
  db:
    image: postgres:16
    ports:
      - "$POSTGRES_PORT:5432"
    environment:
      <<: *py-environment

  redis:
    image: redis:5.0.14
    ports:
      - "6379"

  nginx:
    image: nginx:1.27
    ports:
      - "8073:8073"
    links:
      - web
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/conf.d/web.conf
      - ./:/src
      - django_media:/app/django_media

  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      <<: *py-environment
      PORT: 8071
    env_file: .env
    command: ./scripts/run-django-dev.sh
    stdin_open: true
    tty: true
    ports:
      - "8071:8071"
    links:
      - db
      - redis
    volumes:
      - .:/src
      - django_media:/var/media

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    environment: *py-environment
    env_file: .env
    command: >
      /bin/bash -c '
      sleep 3;
      celery -A unified_ecommerce.celery:app worker -Q default -B -l ${MITOL_UE_LOG_LEVEL:-INFO} &
      celery -A unified_ecommerce.celery:app worker -Q edx_content,default -l ${MITOL_UE_LOG_LEVEL:-INFO}'
    links:
      - db
      - redis
    volumes:
      - .:/src
      - django_media:/var/media

  api:
    image: apache/apisix
    platform: linux/amd64
    environment:
    - KEYCLOAK_REALM=${KEYCLOAK_REALM:-ol-local}
    - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID:-apisix}
    - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
    - KEYCLOAK_DISCOVERY_URL=${KEYCLOAK_DISCOVERY_URL:-https://kc.odl.local:7443/realms/ol-local/.well-known/openid-configuration}
    - APISIX_PORT=${APISIX_PORT:-9080}
    ports:
      - 9080:9080
      - 9180:9180
    volumes:
      - ./config/apisix/config.yaml:/usr/local/apisix/conf/config.yaml
      - ./config/apisix/apisix.yaml:/usr/local/apisix/conf/apisix.yaml
      - ./config/apisix/debug.yaml:/usr/local/apisix/conf/debug.yaml

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    profiles:
      - keycloak
    depends_on:
      - db
    ports:
      - 7080:7080
      - 7443:7443
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_SVC_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_SVC_ADMIN_PASSWORD:-admin}
    networks:
      default:
        aliases:
        - ${KEYCLOAK_SVC_HOSTNAME:-kc.odl.local}
    links:
      - db:uedb
    command: start --verbose --features scripts --import-realm --hostname=${KEYCLOAK_SVC_HOSTNAME:-kc.odl.local} --hostname-strict=false --hostname-debug=true --https-port=7443 --https-certificate-file=/etc/x509/https/tls.crt --https-certificate-key-file=/etc/x509/https/tls.key --http-enabled=true --http-port=7080 --config-keystore=/etc/keycloak-store --config-keystore-password=${KEYCLOAK_SVC_KEYSTORE_PASSWORD} --db=postgres --db-url-database=keycloak --db-url-host=uedb --db-schema=public --db-password=${POSTGRES_PASSWORD} --db-username=postgres
    volumes:
      - keycloak-store:/etc/keycloak-store
      - ./config/keycloak/tls:/etc/x509/https
      - ./config/keycloak/realms:/opt/keycloak/data/import

volumes:
  django_media:
  yarn-cache:
  keycloak-store:
