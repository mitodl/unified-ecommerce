[tool.poetry]
name = "unified_ecommerce"
version = "0.0.0"
description = "Unified Ecommerce middleware for OL applications."
license = "BSD-3"
readme = "README.md"
packages = []
authors  = ["MIT ODL"]


[tool.poetry.dependencies]
python = "^3.11.0"
attrs = "^23.1.0"
base36 = "^0.1.1"
beautifulsoup4 = "^4.12.0"
boto3 = "^1.26.155"
cairosvg = "^2.7.0"
celery = "^5.3.1"
cffi = "^1.15.1"
cryptography = "^43.0.0"
dj-database-url = "^2.1.0"
dj-static = "^0.0.6"
Django = "^4.2.0"
django-anymail = {extras = ["mailgun"], version = "^10.0"}
django-bitfield = "^2.2.0"
django-cache-memoize = "^0.2.0"
django-cors-headers = "^4.3.1"
django-filter = "^23.0"
django-guardian = "^2.4.0"
django-hijack = "^3.4.1"
django-imagekit = "^5.0.0"
django-ipware = "^6.0.0"
django-json-widget = "^1.1.1"
django-redis = "^5.0.0"
django-server-status = "^0.7.0"
django-storages = "^1.13.2"
django-webpack-loader = "^3.0.0"
djangorestframework = "^3.14.0"
drf-extensions = "^0.7.1"
drf-jwt = "^1.19.2"
drf-spectacular = "^0.27.0"
feedparser = "^6.0.10"
google-api-python-client = "^2.89.0"
html5lib = "^1.1"
importlib_metadata = "^7.0.0"
ipython = "^8.14.0"
jedi = "^0.19.0"
lxml = "^4.9.2"
markdown2 = "^2.4.8"
nested-lookup = "^0.2.25"
newrelic = "^9.3.0"
psycopg2 = "^2.9.6"
python-dateutil = "^2.8.2"
python-rapidjson = "^1.8"
pyyaml = "^6.0.0"
redis = "^5.0.1"
requests = "^2.31.0"
sentry-sdk = "^2.0.0"
social-auth-app-django = "^5.2.0"
static3 = "^0.7.0"
tldextract = "^5.1.1"
toolz = "^0.12.0"
ulid-py = "^1.1.0"
urllib3 = "^1.25.10"
uwsgi = "^2.0.21"
wrapt = "^1.16.0"
social-auth-core = {extras = ["openidconnect"], version = "^4.4.2"}
nh3 = "^0.2.14"
retry2 = "^0.9.5"
pluggy = "^1.3.0"
named-enum = "^1.4.0"
django-reversion = "^5.0.8"
prettytable = "^3.9.0"
mitol-django-common = "^2023.12.19"
mitol-django-payment-gateway = "^2023.12.19"
deepdiff = "^6.7.1"
django-safedelete = "^1.3.3"
python-slugify = "^8.0.1"
django-oauth-toolkit = "^2.3.0"
requests-oauthlib = "^1.3.1"
oauthlib = "^3.2.2"
mitol-django-mail = "^2023.12.19"
djangorestframework-dataclasses = "^1.3.1"
django-countries = "^7.6.1"
mitol-django-geoip = ">=2024.10.25"

[tool.poetry.group.dev.dependencies]
bpython = "^0.24"
ddt = "^1.6.0"
django-debug-toolbar = "^4.1.0"
factory_boy = "^3.3.0"
faker = "^21.0.0"
ipdb = "^0.13.13"
moto = "^4.1.12"
nplusone = "^1.0.0"
pdbpp = "^0.10.3"
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
pytest-django = "^4.5.2"
pytest-env = "^1.1.3"
pytest-freezegun = "^0.4.2"
pytest-lazy-fixture = "^0.6.3"
pytest-mock = "^3.10.0"
responses = "^0.25.0"
ruff = "^0.3.0"
safety = "^2.3.4"
semantic-version = "^2.10.0"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "A",  # flake8-builtins
    # "AIR",  # Airflow
    # "ANN",  # flake8-annotations
    "ARG",  # flake8-unused-arguments
    # "ASYNC",  # flake8-async
    "B",  # flake8-bugbear
    "BLE",  # flake8-blind-except
    "C4",  # flake8-comprehensions
    "C90",  # mccabe
    # "COM",  # flake8-commas
    "CPY",  # flake8-copyright
    "D",  # pydocstyle
    "DJ",  # flake8-django
    "DTZ",  # flake8-datetimez
    "E",  # Pycodestyle Error
    "EM",  # flake8-errmsg
    "ERA",  # eradicate
    "EXE",  # flake8-executable
    "F",  # Pyflakes
    "FA",  # flake8-future-annotations
    "FBT",  # flake8-boolean-trap
    "FIX",  # flake8-fixme
    "FLY",  # flynt
    # "FURB",  # refurb
    "G",  # flake8-logging-format
    "I",  # isort
    "ICN",  # flake8-import-conventions
    "INP",  # flake8-no-pep420
    "INT",  # flake8-gettext
    "ISC",  # flake8-implicit-str-concat
    "N",  # pep8-naming
    # "NPY",  # NumPy-specific rules
    # "PD",  # pandas-vet
    "PERF",  # Perflint
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",  # Pylint
    "PT",  # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "Q",  # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # Ruff-specific rules
    "S",  # flake8-bandit
    "SIM",  # flake8-simplify
    "SLF",  # flake8-self
    "SLOT",  # flake8-slots
    "T10",  # flake8-debugger
    "T20",  # flake8-print
    "TCH",  # flake8-type-checking
    "TD",  # flake8-todos
    "TID",  # flake8-tidy-imports
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # Pycodestyle Warning
    "YTT",  # flake8-2020
]
ignore = [
    "B008",
    "B905",
    "D104",
    "D200",
    "D202",
    "D205",
    "D301",
    "D400",
    "N806",
    "N999",
    "PIE804",
    "RET505",
    "RET506",
    "RET507",
    "RET508",
    "RUF012",
    "UP007"
]
exclude = [
    "docs",
    "pants-plugins"
]
typing-modules = ["colour.hints"]

[tool.ruff.pydocstyle]
convention = "pep257"

[tool.ruff.flake8-quotes]
inline-quotes = "double"

[tool.ruff.per-file-ignores]
"*_test.py" = ["ARG001", "E501", "S101", "PLR2004"]
"test_*.py" = ["ARG001", "E501", "S101", "PLR2004"]
"**/migrations/**" = ["ARG001", "D100", "D101"]
